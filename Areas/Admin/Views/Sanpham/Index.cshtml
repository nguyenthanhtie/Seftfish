@model IEnumerable<Seftfish.Models.SanPham>
@{
    ViewData["Title"] = "QUẢN LÝ SẢN PHẨM";
    ViewData["PageTitle"] = "QUẢN LÝ SẢN PHẨM";
    ViewData["SearchPlaceholder"] = "Tìm kiếm sản phẩm...";
}

@Html.AntiForgeryToken()


<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span>DANH SÁCH QUẢN LÝ SẢN PHẨM</span>
        <div class="d-flex gap-2">
             <button class="btn btn-dark btn-sm" id="addProductBtn" data-bs-toggle="modal" data-bs-target="#addProductModal">
                <i class="fas fa-plus me-1"></i> Thêm sản phẩm
            </button>
        </div>
    </div>
    <div class="card-body">
        <table id="productTable" class="table table-hover" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Hình ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th>Danh mục</th>
                    <th>Giá</th>
                    <th>Số lượng</th>
                    <th>Trạng thái</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sanPham in Model)
                {
                    var soLuongTon = sanPham.BienTheSanPhams.Sum(b => b.SoLuongTonKho ?? 0);
                    
                    // Improved main image detection
                    string[] mainImageTypes = new[] { "Chính", "Chinh", "Primary", "Main" };
                    
                    var anhChinh = sanPham.AnhSanPhams
                        .Where(a => !string.IsNullOrEmpty(a.DuongDan))
                        .FirstOrDefault(a => mainImageTypes.Contains(a.LoaiAnh))?.DuongDan;
                    
                    // Fallback to first available image
                    if (string.IsNullOrEmpty(anhChinh) && sanPham.AnhSanPhams.Any())
                    {
                        anhChinh = sanPham.AnhSanPhams.First(a => !string.IsNullOrEmpty(a.DuongDan))?.DuongDan;
                    }
                    
                    // Default image if no images found
                    if (string.IsNullOrEmpty(anhChinh))
                    {
                        anhChinh = "/images/noimage.jpg";
                    }
                    
                    var badgeClass = soLuongTon > 10 ? "bg-success" : soLuongTon > 0 ? "bg-warning text-dark" : "bg-danger";
                    var statusBadge = sanPham.TrangThai == true ? "bg-success" : "bg-warning text-dark";
                    var statusText = sanPham.TrangThai == true ? "Đang bán" : "Ngừng bán";
                    
                    <tr class="clickable-row" data-id="@sanPham.IdSanPham">
                        <td><strong class="text-primary">@(sanPham.IdSanPham)</strong></td>
                        <td>
                            <div class="product-image-container">
                                <img src="@anhChinh" alt="@sanPham.TenSanPham" class="product-thumbnail" 
                                     onerror="this.src='/images/noimage.jpg'">
                                @if (sanPham.AnhSanPhams.Count() > 1)
                                {
                                    <span class="image-count-badge">
                                        +@(sanPham.AnhSanPhams.Count() - 1)
                                    </span>
                                }
                            </div>
                        </td>
                        <td>
                            <div>
                                <strong>@sanPham.TenSanPham</strong>
                                <br><small class="text-muted">@(sanPham.MoTa?.Length > 50 ? sanPham.MoTa.Substring(0, 50) + "..." : sanPham.MoTa)</small>
                            </div>
                        </td>
                        <td>
                            <span class="badge bg-primary">
                                <i class="fas fa-tag me-1"></i>@(sanPham.IdDanhMucNavigation?.TenDanhMuc ?? "Chưa phân loại")
                            </span>
                        </td>
                        <td><strong class="text-success">@sanPham.GiaBan?.ToString("N0") ₫</strong></td>
                        <td>
                            <span class="badge @badgeClass">@soLuongTon</span>
                        </td>
                        <td><span class="badge @statusBadge">@statusText</span></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
   

<!-- Modal hiển thị chi tiết sản phẩm -->
<div class="modal fade" id="productDetailModal" tabindex="-1" aria-labelledby="productDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productDetailModalLabel">Chi tiết sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <div id="productDetailContent">
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thêm/Chỉnh sửa sản phẩm -->
<div class="modal fade" id="addEditProductModal" tabindex="-1" aria-labelledby="addEditProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEditProductModalLabel">Thêm / Chỉnh sửa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <div id="addEditProductContent">
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include SortableJS for drag and drop -->
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
    <script>
        // Đảm bảo document ready trước khi thực hiện
        $(document).ready(function() {
            // Xử lý click vào dòng sản phẩm hoặc nút xem chi tiết
            $(document).on('click', '.clickable-row, .view-product', function (e) {
                // Nếu là nút view-product thì ngăn sự kiện nổi bọt lên tr
                if ($(e.target).closest('.view-product').length > 0) {
                    e.stopPropagation();
                }
                var id = $(this).data('id') || $(this).closest('tr').data('id');
                if (!id) return;
                $('#productDetailModal').modal('show');
                $('#productDetailContent').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"></div></div>');
                $.get('@Url.Action("Detail", "Sanpham", new { area = "Admin" })', { id: id }, function (data) {
                    $('#productDetailContent').html(data);
                }).fail(function () {
                    $('#productDetailContent').html('<div class="alert alert-danger">Không thể tải chi tiết sản phẩm.</div>');
                });
            });

            // Mở modal Thêm sản phẩm
            $('#addProductBtn').on('click', function (e) {
                e.preventDefault();
                $('#addEditProductModalLabel').text('Thêm sản phẩm mới');
                $('#addEditProductModal').modal('show');
                loadProductForm();
            });

            // Hàm tải form sản phẩm
            function loadProductForm(id = null) {
                $('#addEditProductContent').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"></div></div>');
                var url = '@Url.Action("AddOrEdit", "Sanpham", new { area = "Admin" })';
                if (id) url += '?id=' + id;
                
                $.get(url, function (data) {
                    $('#addEditProductContent').html(data);
                }).fail(function () {
                    $('#addEditProductContent').html('<div class="alert alert-danger">Không thể tải form.</div>');
                });
            }

            // Submit form Thêm/Chỉnh sửa sản phẩm qua AJAX - chỉ gắn khi cần thiết
            $(document).off('submit', '#addEditProductForm').on('submit', '#addEditProductForm', function (e) {
                e.preventDefault();
                e.stopImmediatePropagation();
                
                var $form = $(this);
                var $submitBtn = $form.find('button[type="submit"]');
                
                // Kiểm tra nếu đang trong quá trình submit
                if ($submitBtn.prop('disabled') || $form.data('submitting')) {
                    return false;
                }
                
                // Đánh dấu form đang submit
                $form.data('submitting', true);
                
                var formData = new FormData(this);
                
                // Thêm loading indicator
                var originalBtnText = $submitBtn.html();
                $submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Đang xử lý...');
                
                $.ajax({
                    url: $form.attr('action'),
                    type: $form.attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    timeout: 30000,
                    success: function (res) {
                        if (res.success) {
                            // Thông báo thành công
                            alert('Lưu sản phẩm thành công!');
                            $('#addEditProductModal').modal('hide');
                            location.reload();
                        } else {
                            // Hiển thị thông báo lỗi
                            if (res.message) {
                                // Hiển thị thông báo lỗi từ server
                                alert('Lỗi: ' + res.message);
                            } else if (res.html) {
                                // Cập nhật form với dữ liệu mới nếu có
                                $('#addEditProductContent').html(res.html);
                            } else {
                                alert('Có lỗi xảy ra khi lưu sản phẩm!');
                            }
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // Xử lý lỗi AJAX
                        var errorMessage = 'Có lỗi xảy ra khi gửi form!';
                        if (textStatus === 'timeout') {
                            errorMessage = 'Yêu cầu quá thời gian chờ. Vui lòng thử lại.';
                        } else if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        
                        alert('Lỗi: ' + errorMessage);
                        console.error('AJAX Error:', xhr);
                    },
                    complete: function() {
                        // Reset trạng thái form
                        $form.data('submitting', false);
                        $submitBtn.prop('disabled', false).html(originalBtnText);
                    }
                });
                
                return false;
            });
            
            // Xử lý nút chỉnh sửa trong modal chi tiết
            $(document).on('click', '.edit-product-detail', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $('#productDetailModal').modal('hide');
                
                // Mở modal chỉnh sửa
                setTimeout(() => {
                    $('#addEditProductModalLabel').text('Chỉnh sửa sản phẩm');
                    $('#addEditProductModal').modal('show');
                    loadProductForm(id);
                }, 300);
            });

            // Xử lý nút xóa trong modal chi tiết
            $(document).on('click', '.delete-product-detail', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                var $btn = $(this);
                
                // Lấy tên sản phẩm để hiển thị trong thông báo
                var productName = $('#productDetailModal .modal-body h4').first().text() || 'sản phẩm này';
                
                // Xác nhận xóa với thông báo rõ ràng
                var confirmMessage = `Bạn có chắc chắn muốn XÓA VĨNH VIỄN sản phẩm "${productName}"?\n\n` +
                    `⚠️ CẢNH BÁO:\n` +
                    `• Sản phẩm sẽ bị xóa hoàn toàn khỏi hệ thống\n` +
                    `• Tất cả ảnh và thông tin liên quan sẽ bị xóa\n` +
                    `• Thao tác này KHÔNG THỂ HOÀN TÁC!\n\n` +
                    `Nhấn OK để xác nhận xóa vĩnh viễn.`;
                
                if (confirm(confirmMessage)) {
                    $btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Đang xóa...');
                    
                    $.ajax({
                        url: '@Url.Action("Delete", "Sanpham", new { area = "Admin" })',
                        type: 'POST',
                        data: {
                            id: id,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        timeout: 30000,
                        success: function (response) {
                            if (response.success) {
                                alert('✅ Xóa sản phẩm thành công!');
                                $('#productDetailModal').modal('hide');
                                setTimeout(() => location.reload(), 500);
                            } else {
                                alert('❌ Lỗi: ' + (response.message || 'Không thể xóa sản phẩm'));
                                $btn.prop('disabled', false).html('<i class="fas fa-trash me-1"></i> Xóa vĩnh viễn');
                            }
                        },
                        error: function (xhr, textStatus) {
                            var errorMsg = 'Lỗi kết nối máy chủ';
                            if (textStatus === 'timeout') {
                                errorMsg = 'Yêu cầu quá thời gian chờ. Vui lòng thử lại.';
                            } else if (xhr.responseJSON?.message) {
                                errorMsg = xhr.responseJSON.message;
                            }
                            alert('❌ Lỗi: ' + errorMsg);
                            $btn.prop('disabled', false).html('<i class="fas fa-trash me-1"></i> Xóa vĩnh viễn');
                        }
                    });
                }
            });
            
            $('#refreshPageBtn').on('click', function() {
                location.reload();
            });
        });
    </script>
    
    <style>
        .product-image-container {
            position: relative;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            border-radius: 0.375rem;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
        }
        
        .product-thumbnail {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 0.375rem;
            transition: transform 0.2s ease;
        }
        
        .product-thumbnail:hover {
            transform: scale(1.05);
        }
        
        .image-count-badge {
            position: absolute;
            top: -2px;
            right: -2px;
            background-color: #17a2b8;
            color: white;
            font-size: 0.6rem;
            padding: 1px 4px;
            border-radius: 0.25rem;
            font-weight: bold;
            border: 1px solid white;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
            min-width: 16px;
            text-align: center;
        }
        
        /* Đảm bảo tất cả hình ảnh trong bảng có cùng kích thước */
        #productTable .product-image-container {
            width: 60px !important;
            height: 60px !important;
            flex-shrink: 0;
        }
        
        /* Responsive cho mobile */
        @@media (max-width: 768px) {
            .product-image-container {
                width: 50px;
                height: 50px;
            }
            
            #productTable .product-image-container {
                width: 50px !important;
                height: 50px !important;
            }
        }
    </style>
}
